{"version":3,"sources":["utils/axiosHandler.js","components/@extended/DataTable.js","api/campground.js","pages/campground/CampgroundList.js"],"names":["axiosInstance","axios","create","baseURL","process","paramsSerializer","params","qs","stringify","interceptors","request","use","config","err","Promise","reject","response","_ref","data","DataTable","columns","rows","_ref$rowsPerPageOptio","rowsPerPageOptions","isLoading","rowClick","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","_jsxs","_Fragment","children","_jsx","TableContainer","sx","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","align","style","width","label","id","TableBody","colSpan","Box","py","minHeight","CircularProgress","slice","row","hover","tabIndex","onClick","e","cursor","value","render","TablePagination","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","CAMP_URL","getCampgrounds","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","get","stop","_x","apply","arguments","createPost","_ref6","_callee4","_context4","post","concat","_x4","Campgrounds","navigate","useNavigate","campgrounds","setCampgrounds","useEffect","findCampgroundList","sent","useCallback","campgroundId","Grid","container","direction","justifyContent","spacing","item","Button","variant"],"mappings":"6JAAA,+BAGMA,EAAgBC,IAAMC,OAAO,CAClCC,QAASC,wBACTC,iBAAkB,SAACC,GAAM,OAAKC,IAAGC,UAAUF,MAG5CN,EAAcS,aAAaC,QAAQC,KAClC,SAACC,GACA,OAAOA,KAER,SAACC,GAEA,OAAOC,QAAQC,OAAOF,MAIxBb,EAAcS,aAAaO,SAASL,KAAI,SAAAM,GACvC,OADuDA,EAAdC,QAG3BlB,O,gKC0DAmB,IA1EG,SAAHF,GAAoF,IAA9EG,EAAOH,EAAPG,QAASC,EAAIJ,EAAJI,KAAIC,EAAAL,EAAEM,0BAAkB,IAAAD,EAAG,CAAC,GAAI,GAAI,KAAIA,EAAEE,EAASP,EAATO,UAAWC,EAAQR,EAARQ,SAClFC,EAAwBC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAAsCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAWlC,OACCG,eAAAC,WAAA,CAAAC,SAAA,CACCC,cAACC,IAAc,CAACC,GAAI,CAAEC,UAAW,KAAMJ,SACtCF,eAACO,IAAK,CAACC,cAAY,EAAC,aAAW,eAAcN,SAAA,CAC5CC,cAACM,IAAS,CAAAP,SACTC,cAACO,IAAQ,CAAAR,SACPlB,EAAQ2B,KAAI,SAACC,GAAM,OACnBT,cAACU,IAAS,CAAiBC,MAAOF,EAAOE,MAAQF,EAAOE,MAAQ,SAAUC,MAAO,CAAEC,MAAOJ,EAAOI,OAAQd,SACvGU,EAAOK,OADOL,EAAOM,WAM1Bf,cAACgB,IAAS,CAAAjB,SACPd,EAuBDe,cAACO,IAAQ,CAAAR,SACRC,cAACU,IAAS,CAACC,MAAM,SAASM,QAAS,EAAElB,SACpCC,cAACkB,IAAG,CAAChB,GAAI,CAAEiB,GAAI,EAAGC,UAAW,KAAMrB,SAClCC,cAACqB,IAAgB,UAzBpBvC,GACAA,EAAKwC,MAAM/B,EAAOI,EAAaJ,EAAOI,EAAcA,GAAaa,KAAI,SAACe,GACrE,OACCvB,cAACO,IAAQ,CACRiB,OAAK,EACLC,UAAW,EAEXC,QAASxC,EAAW,SAACyC,GAAC,OAAKzC,EAASyC,EAAGJ,IAAO,aAC9CX,MAAO,CAAEgB,OAAQ,WAAY7B,SAE5BlB,EAAQ2B,KAAI,SAACC,GACb,IAAMoB,EAAQN,EAAId,EAAOM,IACzB,OACCf,cAACU,IAAS,CAAiBC,MAAOF,EAAOE,MAAQF,EAAOE,MAAQ,SAASZ,SACvEU,EAAOqB,OAASrB,EAAOqB,OAAOP,GAAOM,GADvBpB,EAAOM,QAPpBQ,EAAIR,cA2BhBf,cAAC+B,IAAe,CACf/C,mBAAoBA,EACpBgD,UAAU,MACVC,MAAOnD,EAAOA,EAAKoD,OAAS,EAC5BvC,YAAaA,EACbJ,KAAMA,EACN4C,aA1DsB,SAACC,EAAOC,GAChC7C,EAAQ6C,IA0DNC,oBAhE6B,SAACF,GAChCxC,GAAgBwC,EAAMG,OAAOV,OAC7BrC,EAAQ,W,oICTJgD,EAAW,qBAEJC,EAAc,eAAA/D,EAAAgE,YAAAC,cAAAC,MAAG,SAAAC,EAAO9E,GAAM,OAAA4E,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SAAKxF,IAAMyF,IAAIX,EAAUzE,IAAO,wBAAAgF,EAAAK,UAAAP,OAAA,gBAAhDQ,GAAA,OAAA3E,EAAA4E,MAAA,KAAAC,YAAA,GAMdC,EAAU,eAAAC,EAAAf,YAAAC,cAAAC,MAAG,SAAAc,EAAO3F,GAAM,OAAA4E,cAAAG,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAT,OAAA,SAAKxF,IAAMkG,KAAK,GAADC,OAAIrB,GAAYzE,IAAO,wBAAA4F,EAAAP,UAAAM,OAAA,gBAAtDI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,YAAA,I,gICyDRQ,UA3DK,WACnB,IAAMC,EAAWC,cACjB9E,EAAsCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3C+E,EAAW7E,EAAA,GAAE8E,EAAc9E,EAAA,GAGlC+E,qBAAU,WACTC,MACE,IAEH,IAAMA,EAAkB,eAAA3F,EAAAgE,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAlE,EAAA,OAAAgE,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEPR,cAAiB,KAAD,EAA7B9D,EAAIoE,EAAAuB,KACVH,EAAexF,GACf,wBAAAoE,EAAAK,UAAAP,OACA,kBALuB,OAAAnE,EAAA4E,MAAA,KAAAC,YAAA,GAWlBrE,EAAWqF,uBAAY,SAAC5C,EAAGJ,GAChC,IAAMiD,EAAejD,EAAIR,GACzBiD,EAAS,eAADH,OAAgBW,MACtB,IAEH,OACC3E,eAAA,OAAAE,SAAA,CACCC,cAAA,MAAAD,SAAI,gBACJF,eAAAC,WAAA,CAAAC,SAAA,CACCC,cAACyE,IAAI,CACJC,WAAS,EACTC,UAAU,MACVC,eAAe,WACfC,QAAS,EAAE9E,SAEXC,cAACyE,IAAI,CAACK,MAAI,EAAA/E,SACTC,cAAC+E,IAAM,CACNC,QAAQ,YACRtD,QAtB2B,WAChCsC,EAAS,uBAqB8BjE,SAClC,iCAKHC,cAACpB,IAAS,CACTC,QAASA,EACTC,KAAMoF,EACNlF,mBAAoB,CAAC,GAAI,GAAI,IAE7BE,SAAUA,WAWf,IAAML,EAAU,CACf,CACCkC,GAAI,eACJD,MAAO,kCACPD,MAAO,IACPF,MAAO,QAER,CACCI,GAAI,SACJD,MAAO,qBACPD,MAAO,GACPF,MAAO","file":"static/js/16.116b5780.chunk.js","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\n\nconst axiosInstance = axios.create({\n\tbaseURL: process.env.REACT_APP_API_SERVER,\n\tparamsSerializer: (params) => qs.stringify(params),\n});\n\naxiosInstance.interceptors.request.use(\n\t(config) => {\n\t\treturn config;\n\t},\n\t(err) => {\n\t\t// eslint-disable-next-line no-undef\n\t\treturn Promise.reject(err);\n\t},\n);\n\naxiosInstance.interceptors.response.use(({data: response}) => {\n\treturn response;\n});\nexport default axiosInstance;\n\n","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableHead, TableBody, TableCell, TableContainer, TablePagination, TableRow, Table, Box, CircularProgress } from '@mui/material';\n\nconst DataTable = ({ columns, rows, rowsPerPageOptions = [10, 25, 100], isLoading, rowClick }) => {\n\tconst [page, setPage] = useState(0);\n\tconst [rowsPerPage, setRowsPerPage] = useState(10);\n\n\tconst handleChangeRowsPerPage = (event) => {\n\t\tsetRowsPerPage(+event.target.value);\n\t\tsetPage(0);\n\t};\n\n\tconst handleChangePage = (event, newPage) => {\n\t\tsetPage(newPage);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<TableContainer sx={{ maxHeight: 440 }}>\n\t\t\t\t<Table stickyHeader aria-label=\"sticky table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t{columns.map((column) => (\n\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align ? column.align : 'center'} style={{ width: column.width }}>\n\t\t\t\t\t\t\t\t\t{column.label}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{!isLoading ? (\n\t\t\t\t\t\t\trows &&\n\t\t\t\t\t\t\trows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.id}\n\t\t\t\t\t\t\t\t\t\tonClick={rowClick ? (e) => rowClick(e, row) : () => {}}\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{columns.map((column) => {\n\t\t\t\t\t\t\t\t\t\t\tconst value = row[column.id];\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align ? column.align : 'center'}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{column.render ? column.render(row) : value}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" colSpan={6}>\n\t\t\t\t\t\t\t\t\t<Box sx={{ py: 3, minHeight: 560 }}>\n\t\t\t\t\t\t\t\t\t\t<CircularProgress />\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<TablePagination\n\t\t\t\trowsPerPageOptions={rowsPerPageOptions}\n\t\t\t\tcomponent=\"div\"\n\t\t\t\tcount={rows ? rows.length : 0}\n\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\tpage={page}\n\t\t\t\tonPageChange={handleChangePage}\n\t\t\t\tonRowsPerPageChange={handleChangeRowsPerPage}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default DataTable;\n\nDataTable.propTypes = {\n\tcolumns: PropTypes.array,\n\trows: PropTypes.array,\n\trowsPerPageOptions: PropTypes.array,\n\tisLoading: PropTypes.bool,\n\trowClick: PropTypes.func\n};\n","import {default as axios} from 'utils/axiosHandler';\n\nconst CAMP_URL = '/api/v1/campground';\n\nexport const getCampgrounds = async (params) => axios.get(CAMP_URL, params);\n\nexport const getPost = async ({id}) => axios.get(`${CAMP_URL}/${id}`);\n\nexport const deletePost = async ({id}) => axios.delete(`${CAMP_URL}/${id}`);\n\nexport const createPost = async (params) => axios.post(`${CAMP_URL}`, params);\n\nexport const updatePost = async ({id}, params) =>\n\taxios.put(`${CAMP_URL}/${id}`, params);\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Button, Grid} from '@mui/material';\r\nimport DataTable from 'components/@extended/DataTable';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {getCampgrounds} from 'api/campground';\r\n\r\n//import CampgroundItem from 'components/CampgroundItem';\r\n\r\nconst Campgrounds = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst [campgrounds, setCampgrounds] = useState([]);\r\n\t//const [isLoading, setLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tfindCampgroundList();\r\n\t}, []);\r\n\r\n\tconst findCampgroundList = async () => {\r\n\t\t//\t\tsetLoading(true);\r\n\t\tconst data = await getCampgrounds();\r\n\t\tsetCampgrounds(data); // 캠핑장 데이터를 상태로 설정합니다.\r\n\t\t//\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst moveCreateCampgroundPage = () => {\r\n\t\tnavigate(`/campground/regist`);\r\n\t};\r\n\r\n\tconst rowClick = useCallback((e, row) => {\r\n\t\tconst campgroundId = row.id;\r\n\t\tnavigate(`/campground/${campgroundId}`);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Campgrounds</h1>\r\n\t\t\t<>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tdirection='row'\r\n\t\t\t\t\tjustifyContent='flex-end'\r\n\t\t\t\t\tspacing={2}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\tonClick={moveCreateCampgroundPage}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t등록하기\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<DataTable\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\trows={campgrounds}\r\n\t\t\t\t\trowsPerPageOptions={[10, 20, 30]}\r\n\t\t\t\t\t//\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\trowClick={rowClick}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t\t{/* {campgrounds.map((campground) => (\r\n\t\t\t\t<CampgroundItem key={campground.id} campground={campground} />\r\n\t\t\t))} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Campgrounds;\r\nconst columns = [\r\n\t{\r\n\t\tid: 'CampGroundNm',\r\n\t\tlabel: '캠핑장 이름',\r\n\t\twidth: 290,\r\n\t\talign: 'left',\r\n\t},\r\n\t{\r\n\t\tid: 'author',\r\n\t\tlabel: '작성자',\r\n\t\twidth: 60,\r\n\t\talign: 'left',\r\n\t},\r\n];\r\n"],"sourceRoot":""}