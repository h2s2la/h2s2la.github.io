{"version":3,"sources":["utils/axiosHandler.js","api/camp.js","api/booking.js","assets/images/landscape.png","pages/camp/BookingComplete.js"],"names":["axiosInstance","axios","create","baseURL","process","paramsSerializer","params","qs","stringify","interceptors","request","use","config","err","Promise","reject","response","_ref","data","CAMPGROUND_URL","CAMPSITE_URL","getCampground","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_ref2","id","wrap","_context2","prev","next","abrupt","get","concat","stop","_x2","apply","arguments","createCampground","_ref6","_callee4","_context4","post","_x4","getCampsiteList","_ref10","_callee7","_context7","getCampsiteListFindByGround","_ref12","_callee8","_ref11","_context8","_x9","getCampsiteListFindByName","_ref13","_callee9","requireGrade","name","_context9","_x10","_x11","getCampsiteListFindByRequireGrade","_ref14","_callee10","_context10","_x12","createCampsite","_ref15","_callee11","_context11","_x13","getCampsite","_ref17","_callee12","_ref16","_context12","_x14","BOOKING_URL","getBookingList","_callee","_context","_x","getBooking","bookingId","createBooking","_ref4","_callee3","_context3","_x3","BokingComplete","navigate","useNavigate","useParams","_useState","useState","_useState2","_slicedToArray","booking","setBooking","_useState3","_useState4","campground","setCampground","useEffect","findBooking","result","campgroundResult","sent","console","log","site","campId","JSON","_jsxs","_Fragment","children","_jsx","Stack","direction","spacing","Grid","container","justifyContent","Card","sx","p","style","borderRadius","marginTop","Divider","CardContent","item","xs","Typography","variant","fontWeight","placeholder","align","booker","memberName","display","className","src","landscapeImage","alt","maxWidth","width","flexDirection","border","padding","campThumImage","height","objectFit","margin","campName","moment","startDate","format","endDate","siteName","bank","accountOwner","account","Box","py","minHeight","textAlign","CircularProgress","Button","onClick"],"mappings":"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","file":"static/js/24.e26a8188.chunk.js","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\n\nconst axiosInstance = axios.create({\n\tbaseURL: process.env.REACT_APP_API_SERVER,\n\tparamsSerializer: (params) => qs.stringify(params),\n});\n\naxiosInstance.interceptors.request.use(\n\t(config) => {\n\t\treturn config;\n\t},\n\t(err) => {\n\t\t// eslint-disable-next-line no-undef\n\t\treturn Promise.reject(err);\n\t},\n);\n\naxiosInstance.interceptors.response.use(({data: response}) => {\n\treturn response;\n});\nexport default axiosInstance;\n\n","import {default as axios} from 'utils/axiosHandler';\n// import request from './request';\n\n/*로컬*/\n// const CAMPGROUND_URL = 'http://localhost:8080/campsite/ground';\n// const CAMPSITE_URL = 'http://localhost:8080/campsite/site';\n\n/*웹서버*/\nconst CAMPGROUND_URL = '/campsite/ground';\nconst CAMPSITE_URL = '/campsite/site';\n\n//export const getCampgroundList = async (params) => axios.get(CAMP_URL, params);\n\nexport const getCampgroundList = async (params) =>\n\taxios.get(CAMPGROUND_URL, params);\n\nexport const getCampground = async ({id}) =>\n\taxios.get(`${CAMPGROUND_URL}/detail/${id}`);\n\nexport const deleteCampground = async ({id}) =>\n\taxios.delete(`${CAMPGROUND_URL}/${id}`);\n\nexport const createCampground = async (params) =>\n\taxios.post(`${CAMPGROUND_URL}`, params);\n\nexport const updateCampground = async ({id}, params) =>\n\taxios.put(`${CAMPGROUND_URL}/${id}`, params);\n\nconst API_KEY = 'YOUR_API_KEY';\nconst API_URL = 'https://api.data.go.kr/openapi/camping-info';\n\nexport const getCampingData = async (region, name) => {\n\tconst params = {\n\t\tserviceKey: API_KEY,\n\t\ttype: 'json',\n\t\tnumOfRows: 100,\n\t\tpageNo: 1,\n\t\tsidoNm: region,\n\t\tcampNm: name,\n\t};\n\tconst response = await axios.get(API_URL, {params});\n\treturn response;\n};\n\n// const defaultParam = {\n// \tkey: process.env.REACT_APP_PIXABAY,\n// \tsafesearch: true,\n// };\n// const getCampgroundList = async (paramObj) => {\n// \tconst params = new URLSearchParams({\n// \t\t...defaultParam,\n// \t\t...paramObj,\n// \t}).toString();\n// \tconst result = await request(`${CAMPGROUND_URL}/?${params}`);\n// \treturn result;\n// };\nexport default getCampgroundList;\n\nexport const getCampsiteList = async () => axios.get(`${CAMPSITE_URL}`);\n\nexport const getCampsiteListFindByGround = async ({id}) =>\n\taxios.get(`${CAMPSITE_URL}/${id}`);\n\nexport const getCampsiteListFindByName = async (requireGrade, name) =>\n\taxios.get(`${CAMPGROUND_URL}/${requireGrade}/${name}`);\n\nexport const getCampsiteListFindByRequireGrade = async (requireGrade) =>\n\taxios.get(`${CAMPGROUND_URL}/${requireGrade}`);\n\nexport const createCampsite = async (params) =>\n\taxios.post(`${CAMPSITE_URL}`, params);\n\nexport const getCampsite = async ({id}) =>\n\taxios.get(`${CAMPSITE_URL}/detail/${id}`);\n","import {default as axios} from 'utils/axiosHandler';\n\n/*로컬*/\n// const BOOKING_URL = 'http://localhost:8081/booking';\n\n/*웹서버*/\nconst BOOKING_URL = '/booking';\n\nexport const getBookingList = async (params) =>\n\taxios.get(`${BOOKING_URL}/getList`, params);\n\nexport const getBooking = async ({bookingId}) =>\n\taxios.get(`${BOOKING_URL}/${bookingId}`);\n\n// export const deletePost = async ({id}) => axios.delete(`${POST_URL}/${id}`);\n\nexport const createBooking = async (params) =>\n\taxios.post(`${BOOKING_URL}`, params);\n\n// export const updatePost = async ({id}, params) =>\n// \taxios.put(`${POST_URL}/${id}`, params);\n","export default __webpack_public_path__ + \"static/media/landscape.be2f91be.png\";","import React, {useEffect, useState} from 'react';\nimport {useNavigate, useParams} from 'react-router-dom';\nimport landscapeImage from '../../assets/images/landscape.png';\nimport moment from 'moment';\nimport 'moment/locale/ko'; // 한국어를 import\n//import {deletePost, getCampground} from 'api/camp';\nimport {getBooking} from 'api/booking';\nimport {getCampground} from 'api/camp';\nimport {\n\tBox,\n\tButton,\n\tCard,\n\tCardContent,\n\tCircularProgress,\n\tDivider,\n\tGrid,\n\tStack,\n\t//Toolbar,\n\tTypography,\n} from '@mui/material';\n//import {LoadingButton} from '@mui/lab';\n//import {useSnackbar} from 'notistack';\n\nconst BokingComplete = () => {\n\tconst navigate = useNavigate();\n\t//const {enqueueSnackbar} = useSnackbar();\n\n\tconst {bookingId} = useParams();\n\n\tconst [booking, setBooking] = useState(null);\n\t//\tconst bookingRef = useRef(null); // booking을 useRef로 선언\n\tconst [campground, setCampground] = useState(null);\n\t//const [deleteLoading, setDeleteLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tfindBooking();\n\t}, [bookingId]);\n\n\tconst findBooking = async () => {\n\t\tconst result = await getBooking({bookingId});\n\t\tconsole.log(result.site);\n\t\tconst campgroundResult = await getCampground({id: result.site.campId});\n\t\tconsole.log('campgroundResult : ' + JSON.stringify(campgroundResult));\n\t\tsetBooking(result);\n\t\tsetCampground(campgroundResult);\n\t};\n\n\t// useEffect(() => {\n\t// \t// booking이 null이 아닐 때만 findCamp 함수 호출\n\t// \tfindCamp();\n\t// }, [bookingRef.current]);\n\n\t// const findCamp = async () => {\n\t// \tconsole.log(JSON.stringify(bookingRef));\n\t// \tconst campgroundResult = await getCampground(bookingRef.campId);\n\t// \tsetCampground(campgroundResult);\n\t// };\n\n\tconst goHome = () => {\n\t\tnavigate(`/`);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Stack direction='row' spacing={2}>\n\t\t\t\t{/* <Grid container>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Button variant='contained' onClick={goBackList}>\n\t\t\t\t\t\t\t목록\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid> */}\n\t\t\t\t<Grid container justifyContent='flex-end'>\n\t\t\t\t\t{/* <Grid item>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tonClick={updatePost}\n\t\t\t\t\t\t\tstyle={{marginRight: 10}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t수정\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<LoadingButton\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tonClick={deleteClick}\n\t\t\t\t\t\t\tcolor='error'\n\t\t\t\t\t\t\tloading={deleteLoading}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t삭제\n\t\t\t\t\t\t</LoadingButton>\n\t\t\t\t\t</Grid> */}\n\t\t\t\t</Grid>\n\t\t\t</Stack>\n\t\t\t<Card sx={{p: 2}} style={{borderRadius: '8px', marginTop: 15}}>\n\t\t\t\t{/* <Toolbar>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tsx={{flex: '1 1 100%'}}\n\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\tid='tableTitle'\n\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t>\n\t\t\t\t\t\t{booking?.name ? booking.name : ''}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar> */}\n\t\t\t\t<Divider />\n\t\t\t\t<CardContent>\n\t\t\t\t\t{booking && campground ? (\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Stack spacing={1}>\n\t\t\t\t\t\t\t\t{/* <img\n\t\t\t\t\t\t\t\t\tsrc={campground.campThumImage}\n\t\t\t\t\t\t\t\t\talt='campThumImage'\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tobjectFit: 'contain',\n\t\t\t\t\t\t\t\t\t\tmaxHeight: '300px',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\t\t\tfontWeight='normal' // 볼드 스타일 제거\n\t\t\t\t\t\t\t\t\taria-label='maximum height'\n\t\t\t\t\t\t\t\t\tplaceholder='이름'\n\t\t\t\t\t\t\t\t\talign='center' // 가운데 정렬\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<b>{booking.booker.memberName}</b>님 예약\n\t\t\t\t\t\t\t\t\t신청이 완료되었습니다.<br></br>\n\t\t\t\t\t\t\t\t\t<br></br>예약신청 후 6시간 내 입금이\n\t\t\t\t\t\t\t\t\t확인되지 않으면<br></br>예약 신청이 취소될\n\t\t\t\t\t\t\t\t\t수 있습니다.<br></br>\n\t\t\t\t\t\t\t\t\t<br></br>고캠프를 이용해주셔서 감사합니다.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName='main-image'\n\t\t\t\t\t\t\t\t\t\tsrc={landscapeImage}\n\t\t\t\t\t\t\t\t\t\talt='이미지'\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\twidth: '30%', // 너비를 80%로 설정\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex', // 내부 요소들을 flex로 배치\n\t\t\t\t\t\t\t\t\t\t\tflexDirection: 'row', // 내부 요소들을 가로 방향으로 배치\n\t\t\t\t\t\t\t\t\t\t\tborder: '1px solid gray', // 회색 테두리 설정\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: '10px', // 모서리 둥글게 설정\n\t\t\t\t\t\t\t\t\t\t\tpadding: '20px', // 테두리와 글자 사이에 간격 주기\n\t\t\t\t\t\t\t\t\t\t\t// boxShadow:\n\t\t\t\t\t\t\t\t\t\t\t// \t'3px 3px 5px rgba(0,0,0,0.3)', // 그림자 효과 설정\n\t\t\t\t\t\t\t\t\t\t\twidth: '600px', // 넓이를 100픽셀로 설정\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={campground.campThumImage}\n\t\t\t\t\t\t\t\t\t\t\talt='campsite'\n\t\t\t\t\t\t\t\t\t\t\theight='170'\n\t\t\t\t\t\t\t\t\t\t\twidth='170'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '10px',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: '10px',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\t\t\t\t\t\taria-label='maximum height'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='캠핑장명'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{booking.site.campName}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='body1'\n\t\t\t\t\t\t\t\t\t\t\t\taria-label='maximum height'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='이용일'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t이용일 :{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t{`${moment(\n\t\t\t\t\t\t\t\t\t\t\t\t\tbooking.startDate,\n\t\t\t\t\t\t\t\t\t\t\t\t).format('YYYY.MM.DD (ddd)')}`}\n\t\t\t\t\t\t\t\t\t\t\t\t-{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t{`${moment(\n\t\t\t\t\t\t\t\t\t\t\t\t\tbooking.endDate,\n\t\t\t\t\t\t\t\t\t\t\t\t).format('YYYY.MM.DD (ddd)')}`}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='body1'\n\t\t\t\t\t\t\t\t\t\t\t\taria-label='maximum height'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='사이트'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t사이트 : {booking.site.siteName}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='body1'\n\t\t\t\t\t\t\t\t\t\t\t\taria-label='maximum height'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='사이트'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t은행 : {campground.bank}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='body1'\n\t\t\t\t\t\t\t\t\t\t\t\taria-label='maximum height'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='사이트'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t예금주 :{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t{campground.accountOwner}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='body1'\n\t\t\t\t\t\t\t\t\t\t\t\taria-label='maximum height'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='사이트'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t계좌번호 : {campground.account}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tsx={{py: 3, minHeight: 560}}\n\t\t\t\t\t\t\tstyle={{textAlign: 'center'}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CircularProgress />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t</CardContent>\n\t\t\t\t<br></br>\n\t\t\t\t<Grid container justifyContent='center'>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Button variant='contained' onClick={goHome}>\n\t\t\t\t\t\t\t메인으로 이동\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Card>\n\t\t</>\n\t);\n};\n\nexport default BokingComplete;\n"],"sourceRoot":""}